[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "valence-evals"
version = "0.1.0"
description = "Adaptive evaluation for LLMs/agents"
authors = [{name = "Valence Team"}]
requires-python = ">=3.11"
dependencies = [
    "typer>=0.9.0",
    "pydantic>=2.0.0",
    "pyyaml>=6.0",
    "rich>=13.0.0",
    "jinja2>=3.1.0",
    "python-dotenv>=1.0.0",
]

[tool.setuptools]
packages = ["valence"]

[project.optional-dependencies]
dev = [
    "black[jupyter]==24.8.0",
    "ruff>=0.5.0",
    "mypy>=1.10.0",
    "pytest>=8.0.0",
    "pytest-cov>=5.0.0",
    "pre-commit>=3.7.0",
    "types-PyYAML",
]
llm = [
    "openai>=1.0.0",
    "anthropic>=0.20.0",
]

[project.scripts]
valence = "valence.cli:app"

[tool.black]
line-length = 100
target-version = ['py311']

[tool.ruff]
line-length = 100
select = ["E", "F", "I", "W", "UP"]
target-version = "py311"

[tool.mypy]
python_version = "3.11"
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
addopts = "--cov=valence --cov-report=term-missing --cov-report=html"

[tool.coverage.run]
branch = true
source = ["valence"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]

[tool.isort]
profile = "black"
line_length = 100